#version: '3.8'

services:
  backend:
    container_name: python-backend
    build:
      context: ../backend  # Navigate out of docker/ and into backend/
      dockerfile: ../backend/Dockerfile  # Dockerfile is located in backend directory
    ports:
      - "5000:5000"  # Exposing port 5000 from the container to 5001 on the host
    environment:
      DB_HOST: db
      DB_USER: testuser
      DB_PASSWORD: testpassword
      DB_NAME: rolecall_database  # Database name
    depends_on:
      - db  # Ensure the db service starts before the backend
    restart: always  # Restart policy
    volumes:
      - ../backend/src:/app/src  # Mount the backend/src directory into the container
      - ../backend/tests:/app/tests  # Mount the tests directory into the container
    networks:
      - rolecall-network
  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: rolecall_database
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3306:3306"
    command: --bind-address=0.0.0.0
    volumes:
      - mysql_data:/var/lib/mysql
      - ../database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - rolecall-network


networks:
  rolecall-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
